PROJECT(skipdbv2)
CMAKE_MINIMUM_REQUIRED (VERSION 2.8)
ADD_DEFINITIONS(-Os -g -Wstrict-prototypes -Wall  -falign-loops=16 -DBUILDING_SKIPDB_DLL)
#ADD_DEFINITIONS(-O0 -g -Wstrict-prototypes -Wall  -falign-loops=16 -DBUILDING_SKIPDB_DLL)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
set(LIBEV_LIBRARIES CACHE PATH "Path to the libev library")
set(LIBEV_INCLUDE_DIRS CACHE PATH "Path to the libev include directory")

#INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src)

if ("${LIBEV_INCLUDE_DIRS}" STREQUAL "")
set(LIBEV_LIBRARIES ev)
endif()

INCLUDE_DIRECTORIES(${LIBEV_INCLUDE_DIRS} ${PROJECT_SOURCE_DIR}/libraries/liblmdb)
FILE(GLOB_RECURSE LMDB_SRC libraries/liblmdb/mdb.c libraries/liblmdb/midl.c)

#set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} /opt/brcm-arm/usr/lib)

ADD_LIBRARY(lmdb STATIC ${LMDB_SRC})

#INCLUDE_DIRECTORIES(${LIBEV_LIBRARIES})

ADD_EXECUTABLE(test ./tests/test.c)
TARGET_LINK_LIBRARIES(test lmdb m ${LIBEV_LIBRARIES})

ADD_EXECUTABLE(mtest libraries/liblmdb/mtest.c)
TARGET_LINK_LIBRARIES(mtest lmdb pthread m ${LIBEV_LIBRARIES})

